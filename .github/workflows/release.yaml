name: Release
on:
  workflow_dispatch:
    inputs: {}
permissions:
  contents: write
  issues: write
  pull-requests: write
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm pack
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm dlx semantic-release
# name: Release
# on:
#   push:
#     tags:
#       - "v*"

# env:
#   NODE_VERSION: '22.x'

# jobs:
#   release:
#     runs-on: ubuntu-22.04
#     steps:
#       - uses: actions/checkout@v4
#       - name: Use Node.js ${{ env.NODE_VERSION }}
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ env.NODE_VERSION }}
#       - name: Install dependencies and build extension
#         run: |
#           npm ci
#           npm run build
#       - name: Create tarball from package
#         run: npm pack
#       - name: Create GitHub release
#         uses: actions/create-release@v1
#         id: create_release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: ${{ github.ref }}
#           draft: false
#           prerelease: false
#       - name: Get release tag from git revision
#         run: |
#           GITHUB_REF=${{ github.ref }}
#           GITHUB_TAG=${GITHUB_REF#refs/tags/v}
#           echo "$GITHUB_REF -> $GITHUB_TAG"
#           echo "GITHUB_TAG=$GITHUB_TAG" >> $GITHUB_ENV
#       - name: Upload GitHub assets
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: gharbi-yasmine-kube-resource-map-${{ env.GITHUB_TAG }}.tgz
#           asset_name: gharbi-yasmine-kube-resource-map-${{ env.GITHUB_TAG }}.tgz
#           asset_content_type: application/octet-stream
